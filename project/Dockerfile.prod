ARG FUNCTION_DIR="/function"
FROM python:slim-buster as build-image

RUN apt-get update && \
    apt-get install -y \
    g++ \
    make \
    cmake \
    unzip \
    libcurl4-openssl-dev
ARG FUNCTION_DIR
RUN mkdir -p ${FUNCTION_DIR}
COPY app/* ${FUNCTION_DIR}/

RUN pip install \
    --target ${FUNCTION_DIR} \
    awslambdaric


FROM python:slim-buster
ARG FUNCTION_DIR
WORKDIR ${FUNCTION_DIR}
COPY --from=build-image ${FUNCTION_DIR} ${FUNCTION_DIR}

RUN mkdir -p /home/app
RUN addgroup --system app && adduser --system --group app
ENV HOME=/home/app
ENV APP_HOME=/home/app/web
RUN mkdir $APP_HOME
WORKDIR $APP_HOME
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1
ENV ENVIRONMENT prod
ENV TESTING 0

RUN apt-get update \
    && apt-get -y install netcat gcc postgresql \
    && apt-get clean

RUN pip install --upgrade pip
COPY ./requirements.txt .
RUN pip install -r requirements.txt

COPY . .
COPY ./scripts/entrypoint.sh ./scripts
ADD https://github.com/aws/aws-lambda-runtime-interface-emulator/releases/latest/download/aws-lambda-rie /usr/bin/aws-lambda-rie
RUN chmod +x ./scripts/entrypoint.sh /usr/bin/aws-lambda-rie

RUN chown -R app:app $APP_HOME
USER app


#ENTRYPOINT ["/usr/local/bin/python", "-m", "awslambdaric"]
ENTRYPOINT ["/home/app/web/scripts/entrypoint.sh"]
CMD ["main.handler"]
